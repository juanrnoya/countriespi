{"ast":null,"code":"/** @format */\nimport axios from \"axios\"; //import { $CombinedState } from \"redux\";\n\nexport function getCountries() {\n  return async function (dispatch) {\n    let call = await axios(\"http://localhost:3001/countries\");\n    return dispatch({\n      type: \"GET_COUNTRY\",\n      payload: call.data\n    });\n  };\n}\nexport function filterByActivity(payload) {\n  return {\n    type: \"FILTER_BY_ACTIVITY\",\n    payload\n  };\n}\nexport function getActivities() {\n  return async function (dispatch) {\n    let call = await axios(\"http://localhost:3001/activities\");\n    return dispatch({\n      type: \"GET_ACTIVITY\",\n      payload: call.data\n    });\n  };\n}\nexport function getCountryDetail(id) {\n  return async function (dispatch) {\n    let call = await axios(`http://localhost:3001/countries/${id}`);\n    return dispatch({\n      type: \"GET_COUNTRY_DETAIL\",\n      payload: call.data\n    });\n  };\n}\nexport function getCountryByName(payload) {\n  return async function (dispatch) {\n    try {\n      let country = await axios(`http://localhost:3001/countries?name=${payload}`);\n      return dispatch({\n        type: \"GET_COUNTRY_BY_NAME\",\n        payload: country.data\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n}\nexport function sortByPopulation(payload) {\n  return {\n    type: \"SORT_POPULATION\",\n    payload\n  };\n}\nexport function filterByContinent(payload) {\n  return {\n    type: \"FILTER_CONTINENT\",\n    payload\n  };\n}\nexport function sortByAlp(payload) {\n  return {\n    type: \"SORT_ALP\",\n    payload\n  };\n}\nexport function newActivity(payload) {\n  return async function () {\n    try {\n      const answer = await axios.post(\"http://localhost:3001/activities\", payload);\n      return answer;\n    } catch (error) {\n      console.log(error);\n    }\n  };\n}","map":{"version":3,"names":["axios","getCountries","dispatch","call","type","payload","data","filterByActivity","getActivities","getCountryDetail","id","getCountryByName","country","error","console","log","sortByPopulation","filterByContinent","sortByAlp","newActivity","answer","post"],"sources":["C:/Users/juanr/Code/PI-Countries-main_jr/client/src/redux/actions/index.js"],"sourcesContent":["/** @format */\r\nimport axios from \"axios\";\r\n//import { $CombinedState } from \"redux\";\r\n\r\nexport function getCountries() {\r\n   return async function (dispatch) {\r\n      let call = await axios(\"http://localhost:3001/countries\");\r\n      return dispatch({\r\n         type: \"GET_COUNTRY\",\r\n         payload: call.data,\r\n      });\r\n   };\r\n}\r\n\r\nexport function filterByActivity(payload) {\r\n   return {\r\n      type: \"FILTER_BY_ACTIVITY\",\r\n      payload,\r\n   };\r\n}\r\n\r\nexport function getActivities() {\r\n   return async function (dispatch) {\r\n      let call = await axios(\"http://localhost:3001/activities\");\r\n      return dispatch({\r\n         type: \"GET_ACTIVITY\",\r\n         payload: call.data,\r\n      });\r\n   };\r\n}\r\n\r\nexport function getCountryDetail(id) {\r\n   return async function (dispatch) {\r\n      let call = await axios(`http://localhost:3001/countries/${id}`);\r\n      return dispatch({\r\n         type: \"GET_COUNTRY_DETAIL\",\r\n         payload: call.data,\r\n      });\r\n   };\r\n}\r\n\r\nexport function getCountryByName(payload) {\r\n   return async function (dispatch) {\r\n      try {\r\n         let country = await axios(\r\n            `http://localhost:3001/countries?name=${payload}`\r\n         );\r\n         return dispatch({\r\n            type: \"GET_COUNTRY_BY_NAME\",\r\n            payload: country.data,\r\n         });\r\n      } catch (error) {\r\n         console.log(error);\r\n      }\r\n   };\r\n}\r\n\r\nexport function sortByPopulation(payload) {\r\n   return {\r\n      type: \"SORT_POPULATION\",\r\n      payload,\r\n   };\r\n}\r\n\r\nexport function filterByContinent(payload) {\r\n   return {\r\n      type: \"FILTER_CONTINENT\",\r\n      payload,\r\n   };\r\n}\r\n\r\nexport function sortByAlp(payload) {\r\n   return {\r\n      type: \"SORT_ALP\",\r\n      payload,\r\n   };\r\n}\r\n\r\nexport function newActivity(payload) {\r\n   return async function () {\r\n      try {\r\n         const answer = await axios.post(\r\n            \"http://localhost:3001/activities\",\r\n            payload\r\n         );\r\n         return answer;\r\n      } catch (error) {\r\n         console.log(error);\r\n      }\r\n   };\r\n}\r\n"],"mappings":"AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AAEA,OAAO,SAASC,YAAT,GAAwB;EAC5B,OAAO,gBAAgBC,QAAhB,EAA0B;IAC9B,IAAIC,IAAI,GAAG,MAAMH,KAAK,CAAC,iCAAD,CAAtB;IACA,OAAOE,QAAQ,CAAC;MACbE,IAAI,EAAE,aADO;MAEbC,OAAO,EAAEF,IAAI,CAACG;IAFD,CAAD,CAAf;EAIF,CAND;AAOF;AAED,OAAO,SAASC,gBAAT,CAA0BF,OAA1B,EAAmC;EACvC,OAAO;IACJD,IAAI,EAAE,oBADF;IAEJC;EAFI,CAAP;AAIF;AAED,OAAO,SAASG,aAAT,GAAyB;EAC7B,OAAO,gBAAgBN,QAAhB,EAA0B;IAC9B,IAAIC,IAAI,GAAG,MAAMH,KAAK,CAAC,kCAAD,CAAtB;IACA,OAAOE,QAAQ,CAAC;MACbE,IAAI,EAAE,cADO;MAEbC,OAAO,EAAEF,IAAI,CAACG;IAFD,CAAD,CAAf;EAIF,CAND;AAOF;AAED,OAAO,SAASG,gBAAT,CAA0BC,EAA1B,EAA8B;EAClC,OAAO,gBAAgBR,QAAhB,EAA0B;IAC9B,IAAIC,IAAI,GAAG,MAAMH,KAAK,CAAE,mCAAkCU,EAAG,EAAvC,CAAtB;IACA,OAAOR,QAAQ,CAAC;MACbE,IAAI,EAAE,oBADO;MAEbC,OAAO,EAAEF,IAAI,CAACG;IAFD,CAAD,CAAf;EAIF,CAND;AAOF;AAED,OAAO,SAASK,gBAAT,CAA0BN,OAA1B,EAAmC;EACvC,OAAO,gBAAgBH,QAAhB,EAA0B;IAC9B,IAAI;MACD,IAAIU,OAAO,GAAG,MAAMZ,KAAK,CACrB,wCAAuCK,OAAQ,EAD1B,CAAzB;MAGA,OAAOH,QAAQ,CAAC;QACbE,IAAI,EAAE,qBADO;QAEbC,OAAO,EAAEO,OAAO,CAACN;MAFJ,CAAD,CAAf;IAIF,CARD,CAQE,OAAOO,KAAP,EAAc;MACbC,OAAO,CAACC,GAAR,CAAYF,KAAZ;IACF;EACH,CAZD;AAaF;AAED,OAAO,SAASG,gBAAT,CAA0BX,OAA1B,EAAmC;EACvC,OAAO;IACJD,IAAI,EAAE,iBADF;IAEJC;EAFI,CAAP;AAIF;AAED,OAAO,SAASY,iBAAT,CAA2BZ,OAA3B,EAAoC;EACxC,OAAO;IACJD,IAAI,EAAE,kBADF;IAEJC;EAFI,CAAP;AAIF;AAED,OAAO,SAASa,SAAT,CAAmBb,OAAnB,EAA4B;EAChC,OAAO;IACJD,IAAI,EAAE,UADF;IAEJC;EAFI,CAAP;AAIF;AAED,OAAO,SAASc,WAAT,CAAqBd,OAArB,EAA8B;EAClC,OAAO,kBAAkB;IACtB,IAAI;MACD,MAAMe,MAAM,GAAG,MAAMpB,KAAK,CAACqB,IAAN,CAClB,kCADkB,EAElBhB,OAFkB,CAArB;MAIA,OAAOe,MAAP;IACF,CAND,CAME,OAAOP,KAAP,EAAc;MACbC,OAAO,CAACC,GAAR,CAAYF,KAAZ;IACF;EACH,CAVD;AAWF"},"metadata":{},"sourceType":"module"}