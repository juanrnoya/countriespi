{"ast":null,"code":"import { strictEqual } from \"assert\";\n/** @format */\n\nconst initialState = {\n  countries: [],\n  activities: [],\n  population: [],\n  allCountries: [],\n  countriesByActivity: [],\n  alphabetically: [],\n  detail: []\n};\n\nfunction rootReducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"GET_COUNTRY\":\n      return { ...state,\n        countries: action.payload,\n        allCountries: action.payload\n      };\n\n    case \"GET_ACTIVITIES\":\n      return { ...state,\n        activities: action.payload\n      };\n\n    case \"GET_COUNTRY_DETAIL\":\n      return { ...state,\n        detail: action.payload\n      };\n\n    case \"FILTER_BY_ACTIVITY\":\n      const countriesByActivity = state.countriesByActivity;\n      const countriesFilterByActivity = action.payload === \"All activities\" ? countriesByActivity : countriesByActivity.filter(e => e.activities.includes(action.payload));\n      return { ...state,\n        countriesByActivity: countriesFilterByActivity\n      };\n\n    case \"FILTER_CONTINENT\":\n      const allCountries = state.allCountries;\n      const CountriesFilterByContinent = action.payload === \"All Continents\" ? allCountries : allCountries.filter(e => e.continents === action.payload);\n      return { ...state,\n        countries: CountriesFilterByContinent\n      };\n\n    case \"GET_COUNTRY_BY_NAME\":\n      return { ...state,\n        countries: action.payload\n      };\n\n    case \"SORT_POPULATION\":\n      const sortPopulation = action.payload === \"min\" ? state.countries.sort(function (a, b) {\n        if (a.population > b.population) {\n          return 1;\n        }\n\n        if (b.population > a.population) {\n          return -1;\n        }\n\n        return 0;\n      }) : state.countries.sort(function (a, b) {\n        if (a.population > b.population) {\n          return -1;\n        }\n\n        if (b.population > a.population) {\n          return 1;\n        }\n\n        return 0;\n      });\n      return { ...state,\n        population: sortPopulation\n      };\n\n    case \"SORT_ALP\":\n      const sortAlphabetically = action.payload === \"From A-Z\" ? state.countries.sort(function (a, b) {\n        if (a.name > b.name) {\n          return 1;\n        }\n\n        if (b.name > a.name) {\n          return -1;\n        }\n\n        return 0;\n      }) : state.countries.sort(function (a, b) {\n        if (a.name > b.name) {\n          return -1;\n        }\n\n        if (b.name > a.name) {\n          return 1;\n        }\n\n        return 0;\n      });\n      return { ...state,\n        alphabetically: sortAlphabetically\n      };\n\n    default:\n      return state;\n  }\n}\n\nexport default rootReducer;","map":{"version":3,"names":["strictEqual","initialState","countries","activities","population","allCountries","countriesByActivity","alphabetically","detail","rootReducer","state","action","type","payload","countriesFilterByActivity","filter","e","includes","CountriesFilterByContinent","continents","sortPopulation","sort","a","b","sortAlphabetically","name"],"sources":["C:/Users/juanr/Code/PI-Countries-main_jr/client/src/redux/reducer/index.js"],"sourcesContent":["import { strictEqual } from \"assert\";\r\n\r\n/** @format */\r\nconst initialState = {\r\n   countries: [],\r\n   activities: [],\r\n   population: [],\r\n   allCountries: [],\r\n   countriesByActivity: [],\r\n   alphabetically: [],\r\n   detail: [],\r\n};\r\n\r\nfunction rootReducer(state = initialState, action) {\r\n   switch (action.type) {\r\n      case \"GET_COUNTRY\":\r\n         return {\r\n            ...state,\r\n            countries: action.payload,\r\n            allCountries: action.payload,\r\n         };\r\n\r\n      case \"GET_ACTIVITIES\":\r\n         return {\r\n            ...state,\r\n            activities: action.payload,\r\n         };\r\n\r\n      case \"GET_COUNTRY_DETAIL\":\r\n         return {\r\n            ...state,\r\n            detail: action.payload,\r\n         };\r\n\r\n      case \"FILTER_BY_ACTIVITY\":\r\n         const countriesByActivity = state.countriesByActivity;\r\n         const countriesFilterByActivity =\r\n            action.payload === \"All activities\"\r\n               ? countriesByActivity\r\n               : countriesByActivity.filter((e) =>\r\n                    e.activities.includes(action.payload)\r\n                 );\r\n         return {\r\n            ...state,\r\n            countriesByActivity: countriesFilterByActivity,\r\n         };\r\n\r\n      case \"FILTER_CONTINENT\":\r\n         const allCountries = state.allCountries;\r\n         const CountriesFilterByContinent =\r\n            action.payload === \"All Continents\"\r\n               ? allCountries\r\n               : allCountries.filter((e) => e.continents === action.payload);\r\n\r\n         return {\r\n            ...state,\r\n            countries: CountriesFilterByContinent,\r\n         };\r\n\r\n      case \"GET_COUNTRY_BY_NAME\":\r\n         return {\r\n            ...state,\r\n            countries: action.payload,\r\n         };\r\n\r\n      case \"SORT_POPULATION\":\r\n         const sortPopulation =\r\n            action.payload === \"min\"\r\n               ? state.countries.sort(function (a, b) {\r\n                    if (a.population > b.population) {\r\n                       return 1;\r\n                    }\r\n                    if (b.population > a.population) {\r\n                       return -1;\r\n                    }\r\n                    return 0;\r\n                 })\r\n               : state.countries.sort(function (a, b) {\r\n                    if (a.population > b.population) {\r\n                       return -1;\r\n                    }\r\n                    if (b.population > a.population) {\r\n                       return 1;\r\n                    }\r\n                    return 0;\r\n                 });\r\n         return {\r\n            ...state,\r\n            population: sortPopulation,\r\n         };\r\n\r\n      case \"SORT_ALP\":\r\n         const sortAlphabetically =\r\n            action.payload === \"From A-Z\"\r\n               ? state.countries.sort(function (a, b) {\r\n                    if (a.name > b.name) {\r\n                       return 1;\r\n                    }\r\n                    if (b.name > a.name) {\r\n                       return -1;\r\n                    }\r\n                    return 0;\r\n                 })\r\n               : state.countries.sort(function (a, b) {\r\n                    if (a.name > b.name) {\r\n                       return -1;\r\n                    }\r\n                    if (b.name > a.name) {\r\n                       return 1;\r\n                    }\r\n                    return 0;\r\n                 });\r\n         return {\r\n            ...state,\r\n            alphabetically: sortAlphabetically,\r\n         };\r\n      default:\r\n         return state;\r\n   }\r\n}\r\n\r\nexport default rootReducer;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}