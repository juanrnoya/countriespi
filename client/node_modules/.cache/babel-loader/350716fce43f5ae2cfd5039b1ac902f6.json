{"ast":null,"code":"/** @format */\nconst initialState = {\n  country: [],\n  population: [],\n  allCountries: [],\n  alphabetically: []\n};\n\nfunction rootReducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"GET_COUNTRY\":\n      return { ...state,\n        country: action.payload,\n        allCountries: action.payload\n      };\n\n    case \"FILTER_CONTINENT\":\n      const allCountries = state.allCountries;\n      const CountriesSortedByContinent = action.payload === \"all\" ? allCountries : allCountries.filter(e => e.continents === action.payload);\n      return { ...state,\n        country: CountriesSortedByContinent\n      };\n\n    case \"SORT_POPULATION\":\n      const sortPopulation = action.payload === \"min\" ? state.country.sort(function (a, b) {\n        if (a.population > b.population) {\n          return 1;\n        }\n\n        if (b.population > a.population) {\n          return -1;\n        }\n\n        return 0;\n      }) : state.country.sort(function (a, b) {\n        if (a.population > b.population) {\n          return -1;\n        }\n\n        if (b.population > a.population) {\n          return 1;\n        }\n\n        return 0;\n      });\n      return { ...state,\n        population: sortPopulation\n      };\n\n    case \"SORT_ALP\":\n      const sortAlphabetically = action.payload === \"From A-Z\" ? state.country.sort(function (a, b) {\n        if (a.name > b.name) {\n          return 1;\n        }\n\n        if (b.name > a.name) {\n          return -1;\n        }\n\n        return 0;\n      }) : state.country.sort(function (a, b) {\n        if (a.name > b.name) {\n          return -1;\n        }\n\n        if (b.name > a.name) {\n          return 1;\n        }\n\n        return 0;\n      });\n      return { ...state,\n        alphabetically: sortAlphabetically\n      };\n\n    default:\n      return state;\n  }\n}\n\nexport default rootReducer;","map":{"version":3,"names":["initialState","country","population","allCountries","alphabetically","rootReducer","state","action","type","payload","CountriesSortedByContinent","filter","e","continents","sortPopulation","sort","a","b","sortAlphabetically","name"],"sources":["C:/users/juanr/code/PI-Countries-main_jr/client/src/redux/reducer/index.js"],"sourcesContent":["/** @format */\r\nconst initialState = {\r\n   country: [],\r\n   population: [],\r\n   allCountries: [],\r\n   alphabetically: [],\r\n};\r\n\r\nfunction rootReducer(state = initialState, action) {\r\n   switch (action.type) {\r\n      case \"GET_COUNTRY\":\r\n         return {\r\n            ...state,\r\n            country: action.payload,\r\n            allCountries: action.payload,\r\n         };\r\n      case \"FILTER_CONTINENT\":\r\n         const allCountries = state.allCountries;\r\n         const CountriesSortedByContinent =\r\n            action.payload === \"all\"\r\n               ? allCountries\r\n               : allCountries.filter((e) => e.continents === action.payload);\r\n\r\n         return {\r\n            ...state,\r\n            country: CountriesSortedByContinent,\r\n         };\r\n\r\n      case \"SORT_POPULATION\":\r\n         const sortPopulation =\r\n            action.payload === \"min\"\r\n               ? state.country.sort(function (a, b) {\r\n                    if (a.population > b.population) {\r\n                       return 1;\r\n                    }\r\n                    if (b.population > a.population) {\r\n                       return -1;\r\n                    }\r\n                    return 0;\r\n                 })\r\n               : state.country.sort(function (a, b) {\r\n                    if (a.population > b.population) {\r\n                       return -1;\r\n                    }\r\n                    if (b.population > a.population) {\r\n                       return 1;\r\n                    }\r\n                    return 0;\r\n                 });\r\n\r\n         return {\r\n            ...state,\r\n            population: sortPopulation,\r\n         };\r\n\r\n      case \"SORT_ALP\":\r\n         const sortAlphabetically =\r\n            action.payload === \"From A-Z\"\r\n               ? state.country.sort(function (a, b) {\r\n                    if (a.name > b.name) {\r\n                       return 1;\r\n                    }\r\n                    if (b.name > a.name) {\r\n                       return -1;\r\n                    }\r\n                    return 0;\r\n                 })\r\n               : state.country.sort(function (a, b) {\r\n                    if (a.name > b.name) {\r\n                       return -1;\r\n                    }\r\n                    if (b.name > a.name) {\r\n                       return 1;\r\n                    }\r\n                    return 0;\r\n                 });\r\n\r\n         return {\r\n            ...state,\r\n            alphabetically: sortAlphabetically,\r\n         };\r\n      default:\r\n         return state;\r\n   }\r\n}\r\nexport default rootReducer;\r\n"],"mappings":"AAAA;AACA,MAAMA,YAAY,GAAG;EAClBC,OAAO,EAAE,EADS;EAElBC,UAAU,EAAE,EAFM;EAGlBC,YAAY,EAAE,EAHI;EAIlBC,cAAc,EAAE;AAJE,CAArB;;AAOA,SAASC,WAAT,GAAmD;EAAA,IAA9BC,KAA8B,uEAAtBN,YAAsB;EAAA,IAARO,MAAQ;;EAChD,QAAQA,MAAM,CAACC,IAAf;IACG,KAAK,aAAL;MACG,OAAO,EACJ,GAAGF,KADC;QAEJL,OAAO,EAAEM,MAAM,CAACE,OAFZ;QAGJN,YAAY,EAAEI,MAAM,CAACE;MAHjB,CAAP;;IAKH,KAAK,kBAAL;MACG,MAAMN,YAAY,GAAGG,KAAK,CAACH,YAA3B;MACA,MAAMO,0BAA0B,GAC7BH,MAAM,CAACE,OAAP,KAAmB,KAAnB,GACKN,YADL,GAEKA,YAAY,CAACQ,MAAb,CAAqBC,CAAD,IAAOA,CAAC,CAACC,UAAF,KAAiBN,MAAM,CAACE,OAAnD,CAHR;MAKA,OAAO,EACJ,GAAGH,KADC;QAEJL,OAAO,EAAES;MAFL,CAAP;;IAKH,KAAK,iBAAL;MACG,MAAMI,cAAc,GACjBP,MAAM,CAACE,OAAP,KAAmB,KAAnB,GACKH,KAAK,CAACL,OAAN,CAAcc,IAAd,CAAmB,UAAUC,CAAV,EAAaC,CAAb,EAAgB;QAChC,IAAID,CAAC,CAACd,UAAF,GAAee,CAAC,CAACf,UAArB,EAAiC;UAC9B,OAAO,CAAP;QACF;;QACD,IAAIe,CAAC,CAACf,UAAF,GAAec,CAAC,CAACd,UAArB,EAAiC;UAC9B,OAAO,CAAC,CAAR;QACF;;QACD,OAAO,CAAP;MACF,CARD,CADL,GAUKI,KAAK,CAACL,OAAN,CAAcc,IAAd,CAAmB,UAAUC,CAAV,EAAaC,CAAb,EAAgB;QAChC,IAAID,CAAC,CAACd,UAAF,GAAee,CAAC,CAACf,UAArB,EAAiC;UAC9B,OAAO,CAAC,CAAR;QACF;;QACD,IAAIe,CAAC,CAACf,UAAF,GAAec,CAAC,CAACd,UAArB,EAAiC;UAC9B,OAAO,CAAP;QACF;;QACD,OAAO,CAAP;MACF,CARD,CAXR;MAqBA,OAAO,EACJ,GAAGI,KADC;QAEJJ,UAAU,EAAEY;MAFR,CAAP;;IAKH,KAAK,UAAL;MACG,MAAMI,kBAAkB,GACrBX,MAAM,CAACE,OAAP,KAAmB,UAAnB,GACKH,KAAK,CAACL,OAAN,CAAcc,IAAd,CAAmB,UAAUC,CAAV,EAAaC,CAAb,EAAgB;QAChC,IAAID,CAAC,CAACG,IAAF,GAASF,CAAC,CAACE,IAAf,EAAqB;UAClB,OAAO,CAAP;QACF;;QACD,IAAIF,CAAC,CAACE,IAAF,GAASH,CAAC,CAACG,IAAf,EAAqB;UAClB,OAAO,CAAC,CAAR;QACF;;QACD,OAAO,CAAP;MACF,CARD,CADL,GAUKb,KAAK,CAACL,OAAN,CAAcc,IAAd,CAAmB,UAAUC,CAAV,EAAaC,CAAb,EAAgB;QAChC,IAAID,CAAC,CAACG,IAAF,GAASF,CAAC,CAACE,IAAf,EAAqB;UAClB,OAAO,CAAC,CAAR;QACF;;QACD,IAAIF,CAAC,CAACE,IAAF,GAASH,CAAC,CAACG,IAAf,EAAqB;UAClB,OAAO,CAAP;QACF;;QACD,OAAO,CAAP;MACF,CARD,CAXR;MAqBA,OAAO,EACJ,GAAGb,KADC;QAEJF,cAAc,EAAEc;MAFZ,CAAP;;IAIH;MACG,OAAOZ,KAAP;EAzEN;AA2EF;;AACD,eAAeD,WAAf"},"metadata":{},"sourceType":"module"}