{"ast":null,"code":"import { strictEqual } from \"assert\";\n/** @format */\n\nconst initialState = {\n  countries: [],\n  activities: [],\n  population: [],\n  allCountries: [],\n  allCountriesByActivity: [],\n  alphabetically: [],\n  detail: []\n};\n\nfunction rootReducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"GET_COUNTRY\":\n      return { ...state,\n        country: action.payload,\n        allCountries: action.payload\n      };\n\n    case \"GET_ACTIVITIES\":\n      return { ...state,\n        activity: action.payload\n      };\n\n    case \"GET_COUNTRY_DETAIL\":\n      return { ...state,\n        detail: action.payload\n      };\n\n    case \"FILTER_BY_ACTIVITY\":\n      const allCountriesByActivity = state.allCountriesByActivity;\n      const countriesFilterByActivity = action.payload === \"All activities\" ? allCountriesByActivity : allCountriesByActivity.filter(e => e.activities.includes(action.payload));\n      return { ...state,\n        allCountriesByActivity: countriesFilterByActivity\n      };\n\n    case \"FILTER_CONTINENT\":\n      const allCountries = state.allCountries;\n      const CountriesFilterByContinent = action.payload === \"All Continents\" ? allCountries : allCountries.filter(e => e.continents === action.payload);\n      return { ...state,\n        country: CountriesFilterByContinent\n      };\n\n    case \"GET_COUNTRY_BY_NAME\":\n      return { ...state,\n        country: action.payload\n      };\n\n    case \"SORT_POPULATION\":\n      const sortPopulation = action.payload === \"min\" ? state.country.sort(function (a, b) {\n        if (a.population > b.population) {\n          return 1;\n        }\n\n        if (b.population > a.population) {\n          return -1;\n        }\n\n        return 0;\n      }) : state.country.sort(function (a, b) {\n        if (a.population > b.population) {\n          return -1;\n        }\n\n        if (b.population > a.population) {\n          return 1;\n        }\n\n        return 0;\n      });\n      return { ...state,\n        population: sortPopulation\n      };\n\n    case \"SORT_ALP\":\n      const sortAlphabetically = action.payload === \"From A-Z\" ? state.country.sort(function (a, b) {\n        if (a.name > b.name) {\n          return 1;\n        }\n\n        if (b.name > a.name) {\n          return -1;\n        }\n\n        return 0;\n      }) : state.country.sort(function (a, b) {\n        if (a.name > b.name) {\n          return -1;\n        }\n\n        if (b.name > a.name) {\n          return 1;\n        }\n\n        return 0;\n      });\n      return { ...state,\n        alphabetically: sortAlphabetically\n      };\n\n    default:\n      return state;\n  }\n}\n\nexport default rootReducer;","map":{"version":3,"names":["strictEqual","initialState","countries","activities","population","allCountries","allCountriesByActivity","alphabetically","detail","rootReducer","state","action","type","country","payload","activity","countriesFilterByActivity","filter","e","includes","CountriesFilterByContinent","continents","sortPopulation","sort","a","b","sortAlphabetically","name"],"sources":["C:/Users/juanr/Code/PI-Countries-main_jr/client/src/redux/reducer/index.js"],"sourcesContent":["import { strictEqual } from \"assert\";\r\n\r\n/** @format */\r\nconst initialState = {\r\n   countries: [],\r\n   activities: [],\r\n   population: [],\r\n   allCountries: [],\r\n   allCountriesByActivity: [],\r\n   alphabetically: [],\r\n   detail: [],\r\n};\r\n\r\nfunction rootReducer(state = initialState, action) {\r\n   switch (action.type) {\r\n      case \"GET_COUNTRY\":\r\n         return {\r\n            ...state,\r\n            country: action.payload,\r\n            allCountries: action.payload,\r\n         };\r\n\r\n      case \"GET_ACTIVITIES\":\r\n         return {\r\n            ...state,\r\n            activity: action.payload,\r\n         };\r\n\r\n      case \"GET_COUNTRY_DETAIL\":\r\n         return {\r\n            ...state,\r\n            detail: action.payload,\r\n         };\r\n\r\n      case \"FILTER_BY_ACTIVITY\":\r\n         const allCountriesByActivity = state.allCountriesByActivity;\r\n         const countriesFilterByActivity =\r\n            action.payload === \"All activities\"\r\n               ? allCountriesByActivity\r\n               : allCountriesByActivity.filter((e) =>\r\n                    e.activities.includes(action.payload)\r\n                 );\r\n         return {\r\n            ...state,\r\n            allCountriesByActivity: countriesFilterByActivity,\r\n         };\r\n\r\n      case \"FILTER_CONTINENT\":\r\n         const allCountries = state.allCountries;\r\n         const CountriesFilterByContinent =\r\n            action.payload === \"All Continents\"\r\n               ? allCountries\r\n               : allCountries.filter((e) => e.continents === action.payload);\r\n\r\n         return {\r\n            ...state,\r\n            country: CountriesFilterByContinent,\r\n         };\r\n\r\n      case \"GET_COUNTRY_BY_NAME\":\r\n         return {\r\n            ...state,\r\n            country: action.payload,\r\n         };\r\n\r\n      case \"SORT_POPULATION\":\r\n         const sortPopulation =\r\n            action.payload === \"min\"\r\n               ? state.country.sort(function (a, b) {\r\n                    if (a.population > b.population) {\r\n                       return 1;\r\n                    }\r\n                    if (b.population > a.population) {\r\n                       return -1;\r\n                    }\r\n                    return 0;\r\n                 })\r\n               : state.country.sort(function (a, b) {\r\n                    if (a.population > b.population) {\r\n                       return -1;\r\n                    }\r\n                    if (b.population > a.population) {\r\n                       return 1;\r\n                    }\r\n                    return 0;\r\n                 });\r\n         return {\r\n            ...state,\r\n            population: sortPopulation,\r\n         };\r\n\r\n      case \"SORT_ALP\":\r\n         const sortAlphabetically =\r\n            action.payload === \"From A-Z\"\r\n               ? state.country.sort(function (a, b) {\r\n                    if (a.name > b.name) {\r\n                       return 1;\r\n                    }\r\n                    if (b.name > a.name) {\r\n                       return -1;\r\n                    }\r\n                    return 0;\r\n                 })\r\n               : state.country.sort(function (a, b) {\r\n                    if (a.name > b.name) {\r\n                       return -1;\r\n                    }\r\n                    if (b.name > a.name) {\r\n                       return 1;\r\n                    }\r\n                    return 0;\r\n                 });\r\n         return {\r\n            ...state,\r\n            alphabetically: sortAlphabetically,\r\n         };\r\n      default:\r\n         return state;\r\n   }\r\n}\r\n\r\nexport default rootReducer;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}